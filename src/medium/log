
running 285 tests
test array_string::best_time_to_buy_and_sell_stock::tests::test1 ... ok
test array_string::best_time_to_buy_and_sell_stock::tests::test2 ... ok
test array_string::best_time_to_buy_and_sell_stock_2::tests::test1 ... ok
test array_string::best_time_to_buy_and_sell_stock_2::tests::test2 ... ok
test array_string::best_time_to_buy_and_sell_stock_2::tests::test3 ... ok
test array_string::jump_game::tests::test1 ... ok
test array_string::jump_game::tests::test2 ... ok
test array_string::jump_game::tests::test3 ... ok
test array_string::majority_element_169::tests::test1 ... ok
test array_string::majority_element_169::tests::test2 ... ok
test array_string::majority_element_169::tests::test3 ... ok
test array_string::majority_element_169::tests::test4 ... ok
test array_string::merge_sorted_array::tests::example_1 ... ok
test array_string::merge_sorted_array::tests::example_2 ... ok
test array_string::merge_sorted_array::tests::example_3 ... ok
test array_string::merge_sorted_array::tests::example_4 ... ok
test array_string::remove_duplicates_sorted_array::tests::test1 ... ok
test array_string::remove_duplicates_sorted_array::tests::test2 ... ok
test array_string::remove_duplicates_sorted_array_2::tests::test1 ... ok
test array_string::remove_duplicates_sorted_array_2::tests::test2 ... ok
test array_string::remove_duplicates_sorted_array_2::tests::test3 ... ok
test array_string::remove_element::tests::test1 ... ok
test array_string::remove_element::tests::test2 ... ok
test array_string::roman_to_int::tests::roman1994 ... ok
test array_string::roman_to_int::tests::roman3 ... ok
test array_string::roman_to_int::tests::roman58 ... ok
test array_string::rotate_array::tests::test1 ... ok
test array_string::rotate_array::tests::test2 ... ok
test array_string::two_sum::tests::test1 ... ok
test dynamic_programming::delete_and_earn::tests::test1 ... ok
test dynamic_programming::delete_and_earn::tests::test2 ... ok
test dynamic_programming::house_robber::tests::it_works ... ok
test dynamic_programming::min_cost_climbing_stairs::tests::it_works ... ok
test dynamic_programming::tribonacci::tests::test1 ... ok
test dynamic_programming::tribonacci::tests::test2 ... ok
test easy::add_binary::tests::it_works ... ok
test easy::add_binary::tests::it_works2 ... ok
test easy::add_binary::tests::it_works3 ... ok
test easy::add_binary::tests::it_works4 ... ok
test easy::add_binary::tests::test5 ... ok
test easy::add_binary::tests::test_parse_string ... ok
test easy::add_binary::tests::testing ... ok
test easy::add_digits_258::tests::test_1 ... ok
test easy::add_digits_258::tests::test_2 ... ok
test easy::add_digits_258::tests::test_3 ... ok
test easy::add_digits_258::tests::test_4 ... ok
test easy::arranging_coins_441::tests::it_works ... ok
test easy::arranging_coins_441::tests::it_works2 ... ok
test easy::arranging_coins_441::tests::it_works3 ... ok
test easy::arranging_coins_441::tests::it_works4 ... ok
test easy::arranging_coins_441::tests::it_works5 ... ok
test easy::base_7_504::tests::test_convert_to_base7 ... ok
test easy::base_7_504::tests::test_convert_to_base7_2 ... ok
test easy::binary_tree_inorder_traversal::tests::test_inorder_traversal ... ok
test easy::binary_tree_inorder_traversal::tests::test_inorder_traversal2 ... ok
test easy::climb_stairs::tests::test_solution ... ok
test easy::climb_stairs::tests::test_solution2 ... ok
test easy::climb_stairs::tests::test_solution3 ... ok
test easy::construct_rectangle_492::tests::test1 ... ok
test easy::construct_rectangle_492::tests::test2 ... ok
test easy::construct_rectangle_492::tests::test3 ... ok
test easy::contains_duplicate::tests::it_works ... ok
test easy::contains_duplicate::tests::it_works2 ... ok
test easy::contains_duplicate::tests::it_works3 ... ok
test easy::contains_duplicate_ii::tests::it_works ... ok
test easy::contains_duplicate_ii::tests::it_works2 ... ok
test easy::contains_duplicate_ii::tests::it_works3 ... ok
test easy::convert_a_number_to_hexadecimal_405::tests::test_26 ... ok
test easy::convert_a_number_to_hexadecimal_405::tests::test_negative_one ... ok
test easy::convert_sorted_array_to_binary_tree::tests::test2 ... ok
test easy::convert_sorted_array_to_binary_tree::tests::test3 ... ok
test easy::counting_bits_338::tests::test_count_bits ... ok
test easy::counting_bits_338::tests::test_count_bits2 ... ok
test easy::counting_bits_338::tests::test_count_bits3 ... ok
test easy::counting_bits_338::tests::test_count_bits4 ... ok
test easy::detect_capital_use_520::tests::cap_false ... ok
test easy::detect_capital_use_520::tests::cap_ok ... ok
test easy::excel_column_sheet::tests::it_works ... ok
test easy::excel_column_sheet::tests::it_works2 ... ok
test easy::excel_column_sheet::tests::it_works3 ... ok
test easy::excel_column_sheet::tests::it_works4 ... ok
test easy::fibonacci_number_509::tests::fibbi ... ok
test easy::fibonacci_number_509::tests::fibbi_dos ... ok
test easy::find_complement_476::tests::test_find_complement ... ok
test easy::find_complement_476::tests::test_find_complement2 ... ok
test easy::find_dissappeared_numbers_448::tests::it_works ... ok
test easy::find_dissappeared_numbers_448::tests::it_works2 ... ok
test easy::find_index_of_first_occ::tests::test1 ... ok
test easy::find_index_of_first_occ::tests::test2 ... ok
test easy::find_mode_in_bst_501::tests::it_works ... ok
test easy::find_mode_in_bst_501::tests::it_works2 ... ok
test easy::find_the_difference_389::tests::diff_e ... ok
test easy::find_the_difference_389::tests::diff_e_again ... ok
test easy::first_unique_character_387::tests::first ... ok
test easy::first_unique_character_387::tests::second ... ok
test easy::fizz_buzz_412::tests::fizz_buzz_3 ... ok
test easy::fizz_buzz_412::tests::fizz_buzz_5 ... ok
test easy::hamming_distance_461::tests::hamm ... ok
test easy::hamming_distance_461::tests::hammer ... ok
test easy::hamming_weight::tests::it_works ... ok
test easy::hamming_weight::tests::it_works2 ... ok
test easy::hamming_weight::tests::it_works3 ... ok
test easy::happy_number::tests::test_is_happy ... ok
test easy::happy_number::tests::test_is_not_happy ... ok
test easy::is_subsequence_392::tests::it_works ... ok
test easy::is_subsequence_392::tests::test_2 ... ok
test easy::is_subsequence_392::tests::test_3 ... ok
test easy::island_perimiter_463::tests::grid ... ok
test easy::island_perimiter_463::tests::grid_mini ... ok
test easy::island_perimiter_463::tests::grid_mini2 ... ok
test easy::isomorphic_strings::tests::it_works ... ok
test easy::isomorphic_strings::tests::it_works2 ... ok
test easy::isomorphic_strings::tests::it_works3 ... ok
test easy::isomorphic_strings::tests::it_works4 ... ok
test easy::keyboard_row_500::tests::test1 ... ok
test easy::keyboard_row_500::tests::test2 ... ok
test easy::keyboard_row_500::tests::test3 ... ok
test easy::length_of_last_word::tests::test_length_of_last_word ... ok
test easy::length_of_last_word::tests::test_length_of_last_word2 ... ok
test easy::length_of_last_word::tests::test_length_of_last_word3 ... ok
test easy::licence_key_formatting_482::tests::license_key_formatting ... ok
test easy::licence_key_formatting_482::tests::license_key_formatting2 ... ok
test easy::long_strictly_inc_or_dec_subarray_3105::tests::test1 ... ok
test easy::long_strictly_inc_or_dec_subarray_3105::tests::test2 ... ok
test easy::long_strictly_inc_or_dec_subarray_3105::tests::test3 ... ok
test easy::longest_common_prefix::tests::test_longest_common_prefix ... ok
test easy::longest_common_prefix::tests::test_longest_common_prefix_2 ... ok
test easy::longest_common_prefix::tests::test_longest_common_prefix_3 ... ok
test easy::longest_palindrome_409::tests::long_1 ... ok
test easy::longest_palindrome_409::tests::long_7 ... ok
test easy::longest_palindrome_409::tests::long_a ... ok
test easy::longest_palindrome_409::tests::long_bb ... ok
test easy::max_consecutive_ones_485::tests::test_0 ... ok
test easy::max_consecutive_ones_485::tests::test_2 ... ok
test easy::max_consecutive_ones_485::tests::test_3 ... ok
test easy::max_consecutive_ones_485::tests::test_max ... ok
test easy::maximum_depth_binary_tree::tests::test_maximum_depth_binary_tree ... ok
test easy::maximum_depth_binary_tree::tests::test_maximum_depth_binary_tree_1 ... ok
test easy::merge_two_sorted_lists::tests::test1 ... ok
test easy::merge_two_sorted_lists::tests::test2 ... ok
test easy::merge_two_sorted_lists::tests::test3 ... ok
test easy::minimum_depth_binary_tree::tests::test1 ... ok
test easy::minimum_depth_binary_tree::tests::test2 ... ok
test easy::minimum_depth_binary_tree::tests::test3 ... ok
test easy::missing_number_268::tests::it_works ... ok
test easy::missing_number_268::tests::it_works2 ... ok
test easy::missing_number_268::tests::it_works3 ... ok
test easy::move_zeroes_283::tests::it_works ... ok
test easy::move_zeroes_283::tests::it_works2 ... ok
test easy::move_zeroes_283::tests::it_works3 ... ok
test easy::move_zeroes_283::tests::it_works4 ... ok
test easy::move_zeroes_283::tests::it_works5 ... ok
test easy::move_zeroes_283::tests::it_works6 ... ok
test easy::move_zeroes_283::tests::it_works7 ... ok
test easy::move_zeroes_283::tests::it_works8 ... ok
test easy::next_greater_element1_496::tests::test1 ... ok
test easy::next_greater_element1_496::tests::test2 ... ok
test easy::nim_game_292::tests::it_works ... ok
test easy::nim_game_292::tests::it_works2 ... ok
test easy::nim_game_292::tests::it_works3 ... ok
test easy::node_postorder_traversal::tests::it_works ... ok
test easy::node_postorder_traversal::tests::it_works2 ... ok
test easy::node_preorder_traversal::tests::it_works ... ok
test easy::node_preorder_traversal::tests::it_works2 ... ok
test easy::palindrome::tests::test_is_palindrome ... ok
test easy::pascals_triangle::tests::test1 ... ok
test easy::pascals_triangle::tests::test2 ... ok
test easy::pascals_triangle::tests::test3 ... ok
test easy::pascals_triangle::tests::test4 ... ok
test easy::pascals_triangle_ii::tests::test1 ... ok
test easy::pascals_triangle_ii::tests::test2 ... ok
test easy::pascals_triangle_ii::tests::test3 ... ok
test easy::pascals_triangle_ii::tests::testcomb ... ok
test easy::path_sum_node::tests::test1 ... ok
test easy::path_sum_node::tests::test2 ... ok
test easy::perfect_number_507::tests::is_not_perfect ... ok
test easy::perfect_number_507::tests::is_perfect ... ok
test easy::plus_one::tests::test_plus_one ... ok
test easy::plus_one::tests::test_plus_one_2 ... ok
test easy::plus_one::tests::test_plus_one_3 ... ok
test easy::power_of_three_326::tests::test_0 ... ok
test easy::power_of_three_326::tests::test_is_power_of_three ... ok
test easy::power_of_three_326::tests::test_is_power_of_three_2 ... ok
test easy::power_of_three_326::tests::test_is_power_of_three_3 ... ok
test easy::power_of_three_326::tests::test_is_power_of_three_9 ... ok
test easy::power_of_two_231::tests::test_is_power_of_two ... ok
test easy::ransom_note_383::tests::ransom_aa ... ok
test easy::ransom_note_383::tests::ransom_fail ... ok
test easy::ransom_note_383::tests::ransom_fail_b ... ok
test easy::relative_ranks_506::tests::relative_2nd ... ok
test easy::relative_ranks_506::tests::relative_ok ... ok
test easy::remove_dup_sorted_list::tests::test_delete_duplicates ... ok
test easy::remove_linked_list_element::tests::test_remove_elements ... ok
test easy::reverse_bits::tests::it_works ... ok
test easy::reverse_bits::tests::it_works2 ... ok
test easy::reverse_bits::tests::it_works3 ... ok
test easy::reverse_linked_list::tests::it_works ... ok
test easy::reverse_linked_list::tests::it_works2 ... ok
test easy::reverse_string_344::tests::reverse_hello ... ok
test easy::reverse_string_recursive::tests::test_reverse_string ... ok
test easy::reverse_string_recursive::tests::test_reverse_string2 ... ok
test easy::reverse_string_recursive::tests::test_reverse_string3 ... ok
test easy::reverser_string_ii_541::tests::test1 ... ok
test easy::reverser_string_ii_541::tests::test2 ... ok
test easy::same_tree::tests::test_is_same_tree ... ok
test easy::same_tree::tests::test_is_same_tree2 ... ok
test easy::search_insert_position::tests::test_search_insert ... ok
test easy::search_insert_position::tests::test_search_insert2 ... ok
test easy::search_insert_position::tests::test_search_insert3 ... ok
test easy::search_insert_position::tests::test_search_insert4 ... ok
test easy::search_insert_position::tests::test_search_insert5 ... ok
test easy::single_number::tests::it_works ... ok
test easy::single_number::tests::it_works2 ... ok
test easy::single_number::tests::it_works3 ... ok
test easy::sqrt::tests::test_sqrt ... ok
test easy::sqrt::tests::test_sqrt2 ... ok
test easy::summary_ranges_228::tests::it_works ... ok
test easy::summary_ranges_228::tests::it_works2 ... ok
test easy::summary_ranges_228::tests::it_works3 ... ok
test easy::symmetric_tree::tests::test_is_symmetric ... ok
test easy::teemo_attacking_495::tests::test1 ... ok
test easy::teemo_attacking_495::tests::test2 ... ok
test easy::teemo_attacking_495::tests::test3 ... ok
test easy::third_maximum_number_414::tests::one ... ok
test easy::third_maximum_number_414::tests::three ... ok
test easy::third_maximum_number_414::tests::two ... ok
test easy::three_consecutive_odds_1550::tests::test1 ... ok
test easy::three_consecutive_odds_1550::tests::test2 ... ok
test easy::three_consecutive_odds_1550::tests::test3 ... ok
test easy::three_consecutive_odds_1550::tests::test4 ... ok
test easy::ugly_number_263::tests::it_works ... n = 6
ok
test easy::ugly_number_263::tests::it_works2 ... ok
test easy::ugly_number_263::tests::it_works3 ... n = 14
n = 7
ok
test easy::ugly_number_263::tests::it_works4 ... n = 25
ok
test easy::valid_anagram_242::tests::it_works ... ok
test easy::valid_anagram_242::tests::it_works2 ... ok
test easy::valid_anagram_242::tests::it_works3 ... ok
test easy::valid_anagram_242::tests::it_works4 ... ok
test easy::valid_anagram_242::tests::it_works5 ... ok
test easy::valid_palindrome::tests::test_0p ... ok
test easy::valid_palindrome::tests::test_is_empty ... ok
test easy::valid_palindrome::tests::test_is_not_palindrome ... ok
test easy::valid_palindrome::tests::test_is_palindrome ... ok
test easy::valid_paranthesis::tests::test1 ... ok
test easy::valid_paranthesis::tests::test2 ... ok
test easy::valid_paranthesis::tests::test3 ... ok
test easy::valid_perfect_square_367::tests::square_14 ... ok
test easy::valid_perfect_square_367::tests::square_16 ... ok
test easy::valid_perfect_square_367::tests::square_808201 ... ok
test easy::word_pattern_290::tests::it_works2 ... ok
test easy::word_pattern_290::tests::it_works3 ... ok
test easy::word_pattern_290::tests::it_works4 ... ok
test easy::word_pattern_290::tests::it_works_a ... ok
test hard::number_of_atoms_726::tests::test_1 ... ok
test medium::construct_lexo_largest_seq_1718::tests::test1 ... queue: []
queue: []
ok
test medium::construct_lexo_largest_seq_1718::tests::test2 ... queue: []
queue: [([5, 1, 4, 1, 1, 5, 4, 1, 1], 3), ([5, 1, 1, 4, 1, 5, 1, 4, 1], 3)]
queue: [([5, 1, 4, 1, 1, 5, 4, 1, 1], 3), ([5, 1, 1, 4, 1, 5, 1, 4, 1], 3)]
queue: [([5, 1, 4, 1, 1, 5, 4, 1, 1], 3)]
queue: [([5, 1, 4, 1, 1, 5, 4, 1, 1], 3)]
queue: [([5, 1, 4, 1, 1, 5, 4, 1, 1], 3)]
queue: []
queue: [([5, 3, 4, 1, 3, 5, 4, 1, 1], 2)]
queue: [([5, 3, 4, 1, 3, 5, 4, 1, 1], 2)]
queue: []
ok
test medium::construct_smallest_num_from_di_str_2375::tests::test1 ... ok
test medium::count_servers_that_communicate_1267::tests::test1 ... ok
test medium::course_schedule_iv_1462::tests::test1 ... ok
test medium::find_eventual_safe_states_802::tests::test1 ... ok
test medium::find_eventual_safe_states_802::tests::test2 ... ok
test medium::find_punishment_num_2698::tests::test1 ... combination ["4"]
combination ["9"]
combination ["1", "6"]
entry: ["16"]
combination ["16"]
combination ["2", "5"]
entry: ["25"]
combination ["25"]
combination ["3", "6"]
entry: ["36"]
combination ["36"]
combination ["4", "9"]
entry: ["49"]
combination ["49"]
combination ["6", "4"]
entry: ["64"]
combination ["64"]
i: 9
i*i: 81
combination ["1", "0", "0"]
entry: ["10", "0"]
entry: ["100"]
entry: ["1", "00"]
combination ["1", "00"]
entry: ["100"]
combination ["100"]
i: 10
i*i: 100
combination ["1", "2", "1"]
entry: ["12", "1"]
entry: ["121"]
entry: ["1", "21"]
combination ["1", "21"]
entry: ["121"]
combination ["121"]
combination ["12", "1"]
entry: ["121"]
combination ["1", "4", "4"]
entry: ["14", "4"]
entry: ["144"]
entry: ["1", "44"]
combination ["1", "44"]
entry: ["144"]
combination ["144"]
combination ["14", "4"]
entry: ["144"]
combination ["1", "6", "9"]
entry: ["16", "9"]
entry: ["169"]
entry: ["1", "69"]
combination ["1", "69"]
entry: ["169"]
combination ["169"]
combination ["16", "9"]
entry: ["169"]
combination ["1", "9", "6"]
entry: ["19", "6"]
entry: ["196"]
entry: ["1", "96"]
combination ["1", "96"]
entry: ["196"]
combination ["196"]
combination ["19", "6"]
entry: ["196"]
combination ["2", "2", "5"]
entry: ["22", "5"]
entry: ["225"]
entry: ["2", "25"]
combination ["2", "25"]
entry: ["225"]
combination ["225"]
combination ["2", "5", "6"]
entry: ["25", "6"]
entry: ["256"]
entry: ["2", "56"]
combination ["2", "56"]
entry: ["256"]
combination ["256"]
combination ["25", "6"]
entry: ["256"]
combination ["2", "8", "9"]
entry: ["28", "9"]
entry: ["289"]
entry: ["2", "89"]
combination ["2", "89"]
entry: ["289"]
combination ["289"]
combination ["28", "9"]
entry: ["289"]
combination ["3", "2", "4"]
entry: ["32", "4"]
entry: ["324"]
entry: ["3", "24"]
combination ["3", "24"]
entry: ["324"]
combination ["324"]
combination ["32", "4"]
entry: ["324"]
combination ["3", "6", "1"]
entry: ["36", "1"]
entry: ["361"]
entry: ["3", "61"]
combination ["3", "61"]
entry: ["361"]
combination ["361"]
combination ["36", "1"]
entry: ["361"]
combination ["4", "0", "0"]
entry: ["40", "0"]
entry: ["400"]
entry: ["4", "00"]
combination ["4", "00"]
entry: ["400"]
combination ["400"]
combination ["40", "0"]
entry: ["400"]
combination ["4", "4", "1"]
entry: ["44", "1"]
entry: ["441"]
entry: ["4", "41"]
combination ["4", "41"]
entry: ["441"]
combination ["441"]
combination ["4", "8", "4"]
entry: ["48", "4"]
entry: ["484"]
entry: ["4", "84"]
combination ["4", "84"]
entry: ["484"]
combination ["484"]
combination ["48", "4"]
entry: ["484"]
combination ["5", "2", "9"]
entry: ["52", "9"]
entry: ["529"]
entry: ["5", "29"]
combination ["5", "29"]
entry: ["529"]
combination ["529"]
combination ["52", "9"]
entry: ["529"]
combination ["5", "7", "6"]
entry: ["57", "6"]
entry: ["576"]
entry: ["5", "76"]
combination ["5", "76"]
entry: ["576"]
combination ["576"]
combination ["57", "6"]
entry: ["576"]
combination ["6", "2", "5"]
entry: ["62", "5"]
entry: ["625"]
entry: ["6", "25"]
combination ["6", "25"]
entry: ["625"]
combination ["625"]
combination ["62", "5"]
entry: ["625"]
combination ["6", "7", "6"]
entry: ["67", "6"]
entry: ["676"]
entry: ["6", "76"]
combination ["6", "76"]
entry: ["676"]
combination ["676"]
combination ["67", "6"]
entry: ["676"]
combination ["7", "2", "9"]
entry: ["72", "9"]
entry: ["729"]
entry: ["7", "29"]
combination ["7", "29"]
entry: ["729"]
combination ["729"]
combination ["72", "9"]
entry: ["729"]
combination ["7", "8", "4"]
entry: ["78", "4"]
entry: ["784"]
entry: ["7", "84"]
combination ["7", "84"]
entry: ["784"]
combination ["784"]
combination ["78", "4"]
entry: ["784"]
combination ["8", "4", "1"]
entry: ["84", "1"]
entry: ["841"]
entry: ["8", "41"]
combination ["8", "41"]
entry: ["841"]
combination ["841"]
combination ["84", "1"]
entry: ["841"]
combination ["9", "0", "0"]
entry: ["90", "0"]
entry: ["900"]
entry: ["9", "00"]
combination ["9", "00"]
entry: ["900"]
combination ["900"]
combination ["90", "0"]
entry: ["900"]
combination ["9", "6", "1"]
entry: ["96", "1"]
entry: ["961"]
entry: ["9", "61"]
combination ["9", "61"]
entry: ["961"]
combination ["961"]
combination ["96", "1"]
entry: ["961"]
combination ["1", "0", "2", "4"]
entry: ["10", "2", "4"]
entry: ["102", "4"]
entry: ["1024"]
entry: ["1", "02", "4"]
entry: ["1", "024"]
entry: ["1", "0", "24"]
combination ["1", "0", "24"]
entry: ["10", "24"]
entry: ["1024"]
entry: ["1", "024"]
combination ["1", "024"]
entry: ["1024"]
combination ["1024"]
combination ["10", "24"]
entry: ["1024"]
combination ["1", "02", "4"]
entry: ["102", "4"]
entry: ["1024"]
entry: ["1", "024"]
combination ["102", "4"]
entry: ["1024"]
combination ["10", "2", "4"]
entry: ["102", "4"]
entry: ["1024"]
entry: ["10", "24"]
combination ["1", "0", "8", "9"]
entry: ["10", "8", "9"]
entry: ["108", "9"]
entry: ["1089"]
entry: ["1", "08", "9"]
entry: ["1", "089"]
entry: ["1", "0", "89"]
combination ["1", "0", "89"]
entry: ["10", "89"]
entry: ["1089"]
entry: ["1", "089"]
combination ["1", "089"]
entry: ["1089"]
combination ["1089"]
combination ["10", "89"]
entry: ["1089"]
combination ["1", "08", "9"]
entry: ["108", "9"]
entry: ["1089"]
entry: ["1", "089"]
combination ["108", "9"]
entry: ["1089"]
combination ["10", "8", "9"]
entry: ["108", "9"]
entry: ["1089"]
entry: ["10", "89"]
combination ["1", "1", "5", "6"]
entry: ["11", "5", "6"]
entry: ["115", "6"]
entry: ["1156"]
entry: ["1", "15", "6"]
entry: ["1", "156"]
entry: ["1", "1", "56"]
combination ["1", "1", "56"]
entry: ["11", "56"]
entry: ["1156"]
entry: ["1", "156"]
combination ["1", "156"]
entry: ["1156"]
combination ["1156"]
combination ["11", "56"]
entry: ["1156"]
combination ["1", "15", "6"]
entry: ["115", "6"]
entry: ["1156"]
entry: ["1", "156"]
combination ["115", "6"]
entry: ["1156"]
combination ["1", "2", "2", "5"]
entry: ["12", "2", "5"]
entry: ["122", "5"]
entry: ["1225"]
entry: ["1", "22", "5"]
entry: ["1", "225"]
entry: ["1", "2", "25"]
combination ["1", "2", "25"]
entry: ["12", "25"]
entry: ["1225"]
entry: ["1", "225"]
combination ["1", "225"]
entry: ["1225"]
combination ["1225"]
combination ["12", "25"]
entry: ["1225"]
combination ["122", "5"]
entry: ["1225"]
combination ["12", "2", "5"]
entry: ["122", "5"]
entry: ["1225"]
entry: ["12", "25"]
combination ["1", "2", "9", "6"]
entry: ["12", "9", "6"]
entry: ["129", "6"]
entry: ["1296"]
entry: ["1", "29", "6"]
entry: ["1", "296"]
entry: ["1", "2", "96"]
combination ["1", "2", "96"]
entry: ["12", "96"]
entry: ["1296"]
entry: ["1", "296"]
combination ["1", "296"]
entry: ["1296"]
combination ["1296"]
combination ["12", "96"]
entry: ["1296"]
i: 36
i*i: 1296
combination ["1", "3", "6", "9"]
entry: ["13", "6", "9"]
entry: ["136", "9"]
entry: ["1369"]
entry: ["1", "36", "9"]
entry: ["1", "369"]
entry: ["1", "3", "69"]
combination ["1", "3", "69"]
entry: ["13", "69"]
entry: ["1369"]
entry: ["1", "369"]
combination ["1", "369"]
entry: ["1369"]
combination ["1369"]
combination ["13", "69"]
entry: ["1369"]
combination ["1", "36", "9"]
entry: ["136", "9"]
entry: ["1369"]
entry: ["1", "369"]
combination ["136", "9"]
entry: ["1369"]
combination ["13", "6", "9"]
entry: ["136", "9"]
entry: ["1369"]
entry: ["13", "69"]
ok
test medium::find_punishment_num_2698::tests::test2 ... combination ["4"]
combination ["9"]
combination ["1", "6"]
entry: ["16"]
combination ["16"]
combination ["2", "5"]
entry: ["25"]
combination ["25"]
combination ["3", "6"]
entry: ["36"]
combination ["36"]
combination ["4", "9"]
entry: ["49"]
combination ["49"]
combination ["6", "4"]
entry: ["64"]
combination ["64"]
i: 9
i*i: 81
combination ["1", "0", "0"]
entry: ["10", "0"]
entry: ["100"]
entry: ["1", "00"]
combination ["1", "00"]
entry: ["100"]
combination ["100"]
i: 10
i*i: 100
combination ["1", "2", "1"]
entry: ["12", "1"]
entry: ["121"]
entry: ["1", "21"]
combination ["1", "21"]
entry: ["121"]
combination ["121"]
combination ["12", "1"]
entry: ["121"]
combination ["1", "4", "4"]
entry: ["14", "4"]
entry: ["144"]
entry: ["1", "44"]
combination ["1", "44"]
entry: ["144"]
combination ["144"]
combination ["14", "4"]
entry: ["144"]
combination ["1", "6", "9"]
entry: ["16", "9"]
entry: ["169"]
entry: ["1", "69"]
combination ["1", "69"]
entry: ["169"]
combination ["169"]
combination ["16", "9"]
entry: ["169"]
combination ["1", "9", "6"]
entry: ["19", "6"]
entry: ["196"]
entry: ["1", "96"]
combination ["1", "96"]
entry: ["196"]
combination ["196"]
combination ["19", "6"]
entry: ["196"]
combination ["2", "2", "5"]
entry: ["22", "5"]
entry: ["225"]
entry: ["2", "25"]
combination ["2", "25"]
entry: ["225"]
combination ["225"]
combination ["2", "5", "6"]
entry: ["25", "6"]
entry: ["256"]
entry: ["2", "56"]
combination ["2", "56"]
entry: ["256"]
combination ["256"]
combination ["25", "6"]
entry: ["256"]
combination ["2", "8", "9"]
entry: ["28", "9"]
entry: ["289"]
entry: ["2", "89"]
combination ["2", "89"]
entry: ["289"]
combination ["289"]
combination ["28", "9"]
entry: ["289"]
combination ["3", "2", "4"]
entry: ["32", "4"]
entry: ["324"]
entry: ["3", "24"]
combination ["3", "24"]
entry: ["324"]
combination ["324"]
combination ["32", "4"]
entry: ["324"]
combination ["3", "6", "1"]
entry: ["36", "1"]
entry: ["361"]
entry: ["3", "61"]
combination ["3", "61"]
entry: ["361"]
combination ["361"]
combination ["36", "1"]
entry: ["361"]
combination ["4", "0", "0"]
entry: ["40", "0"]
entry: ["400"]
entry: ["4", "00"]
combination ["4", "00"]
entry: ["400"]
combination ["400"]
combination ["40", "0"]
entry: ["400"]
combination ["4", "4", "1"]
entry: ["44", "1"]
entry: ["441"]
entry: ["4", "41"]
combination ["4", "41"]
entry: ["441"]
combination ["441"]
combination ["4", "8", "4"]
entry: ["48", "4"]
entry: ["484"]
entry: ["4", "84"]
combination ["4", "84"]
entry: ["484"]
combination ["484"]
combination ["48", "4"]
entry: ["484"]
combination ["5", "2", "9"]
entry: ["52", "9"]
entry: ["529"]
entry: ["5", "29"]
combination ["5", "29"]
entry: ["529"]
combination ["529"]
combination ["52", "9"]
entry: ["529"]
combination ["5", "7", "6"]
entry: ["57", "6"]
entry: ["576"]
entry: ["5", "76"]
combination ["5", "76"]
entry: ["576"]
combination ["576"]
combination ["57", "6"]
entry: ["576"]
combination ["6", "2", "5"]
entry: ["62", "5"]
entry: ["625"]
entry: ["6", "25"]
combination ["6", "25"]
entry: ["625"]
combination ["625"]
combination ["62", "5"]
entry: ["625"]
combination ["6", "7", "6"]
entry: ["67", "6"]
entry: ["676"]
entry: ["6", "76"]
combination ["6", "76"]
entry: ["676"]
combination ["676"]
combination ["67", "6"]
entry: ["676"]
combination ["7", "2", "9"]
entry: ["72", "9"]
entry: ["729"]
entry: ["7", "29"]
combination ["7", "29"]
entry: ["729"]
combination ["729"]
combination ["72", "9"]
entry: ["729"]
combination ["7", "8", "4"]
entry: ["78", "4"]
entry: ["784"]
entry: ["7", "84"]
combination ["7", "84"]
entry: ["784"]
combination ["784"]
combination ["78", "4"]
entry: ["784"]
combination ["8", "4", "1"]
entry: ["84", "1"]
entry: ["841"]
entry: ["8", "41"]
combination ["8", "41"]
entry: ["841"]
combination ["841"]
combination ["84", "1"]
entry: ["841"]
combination ["9", "0", "0"]
entry: ["90", "0"]
entry: ["900"]
entry: ["9", "00"]
combination ["9", "00"]
entry: ["900"]
combination ["900"]
combination ["90", "0"]
entry: ["900"]
combination ["9", "6", "1"]
entry: ["96", "1"]
entry: ["961"]
entry: ["9", "61"]
combination ["9", "61"]
entry: ["961"]
combination ["961"]
combination ["96", "1"]
entry: ["961"]
combination ["1", "0", "2", "4"]
entry: ["10", "2", "4"]
entry: ["102", "4"]
entry: ["1024"]
entry: ["1", "02", "4"]
entry: ["1", "024"]
entry: ["1", "0", "24"]
combination ["1", "0", "24"]
entry: ["10", "24"]
entry: ["1024"]
entry: ["1", "024"]
combination ["1", "024"]
entry: ["1024"]
combination ["1024"]
combination ["10", "24"]
entry: ["1024"]
combination ["1", "02", "4"]
entry: ["102", "4"]
entry: ["1024"]
entry: ["1", "024"]
combination ["102", "4"]
entry: ["1024"]
combination ["10", "2", "4"]
entry: ["102", "4"]
entry: ["1024"]
entry: ["10", "24"]
combination ["1", "0", "8", "9"]
entry: ["10", "8", "9"]
entry: ["108", "9"]
entry: ["1089"]
entry: ["1", "08", "9"]
entry: ["1", "089"]
entry: ["1", "0", "89"]
combination ["1", "0", "89"]
entry: ["10", "89"]
entry: ["1089"]
entry: ["1", "089"]
combination ["1", "089"]
entry: ["1089"]
combination ["1089"]
combination ["10", "89"]
entry: ["1089"]
combination ["1", "08", "9"]
entry: ["108", "9"]
entry: ["1089"]
entry: ["1", "089"]
combination ["108", "9"]
entry: ["1089"]
combination ["10", "8", "9"]
entry: ["108", "9"]
entry: ["1089"]
entry: ["10", "89"]
combination ["1", "1", "5", "6"]
entry: ["11", "5", "6"]
entry: ["115", "6"]
entry: ["1156"]
entry: ["1", "15", "6"]
entry: ["1", "156"]
entry: ["1", "1", "56"]
combination ["1", "1", "56"]
entry: ["11", "56"]
entry: ["1156"]
entry: ["1", "156"]
combination ["1", "156"]
entry: ["1156"]
combination ["1156"]
combination ["11", "56"]
entry: ["1156"]
combination ["1", "15", "6"]
entry: ["115", "6"]
entry: ["1156"]
entry: ["1", "156"]
combination ["115", "6"]
entry: ["1156"]
combination ["1", "2", "2", "5"]
entry: ["12", "2", "5"]
entry: ["122", "5"]
entry: ["1225"]
entry: ["1", "22", "5"]
entry: ["1", "225"]
entry: ["1", "2", "25"]
combination ["1", "2", "25"]
entry: ["12", "25"]
entry: ["1225"]
entry: ["1", "225"]
combination ["1", "225"]
entry: ["1225"]
combination ["1225"]
combination ["12", "25"]
entry: ["1225"]
combination ["122", "5"]
entry: ["1225"]
combination ["12", "2", "5"]
entry: ["122", "5"]
entry: ["1225"]
entry: ["12", "25"]
combination ["1", "2", "9", "6"]
entry: ["12", "9", "6"]
entry: ["129", "6"]
entry: ["1296"]
entry: ["1", "29", "6"]
entry: ["1", "296"]
entry: ["1", "2", "96"]
combination ["1", "2", "96"]
entry: ["12", "96"]
entry: ["1296"]
entry: ["1", "296"]
combination ["1", "296"]
entry: ["1296"]
combination ["1296"]
combination ["12", "96"]
entry: ["1296"]
i: 36
i*i: 1296
combination ["1", "3", "6", "9"]
entry: ["13", "6", "9"]
entry: ["136", "9"]
entry: ["1369"]
entry: ["1", "36", "9"]
entry: ["1", "369"]
entry: ["1", "3", "69"]
combination ["1", "3", "69"]
entry: ["13", "69"]
entry: ["1369"]
entry: ["1", "369"]
combination ["1", "369"]
entry: ["1369"]
combination ["1369"]
combination ["13", "69"]
entry: ["1369"]
combination ["1", "36", "9"]
entry: ["136", "9"]
entry: ["1369"]
entry: ["1", "369"]
combination ["136", "9"]
entry: ["1369"]
combination ["13", "6", "9"]
entry: ["136", "9"]
entry: ["1369"]
entry: ["13", "69"]
combination ["1", "4", "4", "4"]
entry: ["14", "4", "4"]
entry: ["144", "4"]
entry: ["1444"]
entry: ["1", "44", "4"]
entry: ["1", "444"]
entry: ["1", "4", "44"]
combination ["1", "4", "44"]
entry: ["14", "44"]
entry: ["1444"]
entry: ["1", "444"]
combination ["1", "444"]
entry: ["1444"]
combination ["1444"]
combination ["14", "44"]
entry: ["1444"]
combination ["144", "4"]
entry: ["1444"]
combination ["14", "4", "4"]
entry: ["144", "4"]
entry: ["1444"]
entry: ["14", "44"]
combination ["1", "5", "2", "1"]
entry: ["15", "2", "1"]
entry: ["152", "1"]
entry: ["1521"]
entry: ["1", "52", "1"]
entry: ["1", "521"]
entry: ["1", "5", "21"]
combination ["1", "5", "21"]
entry: ["15", "21"]
entry: ["1521"]
entry: ["1", "521"]
combination ["1", "521"]
entry: ["1521"]
combination ["1521"]
combination ["15", "21"]
entry: ["1521"]
combination ["1", "52", "1"]
entry: ["152", "1"]
entry: ["1521"]
entry: ["1", "521"]
combination ["152", "1"]
entry: ["1521"]
combination ["15", "2", "1"]
entry: ["152", "1"]
entry: ["1521"]
entry: ["15", "21"]
combination ["1", "6", "0", "0"]
entry: ["16", "0", "0"]
entry: ["160", "0"]
entry: ["1600"]
entry: ["1", "60", "0"]
entry: ["1", "600"]
entry: ["1", "6", "00"]
combination ["1", "6", "00"]
entry: ["16", "00"]
entry: ["1600"]
entry: ["1", "600"]
combination ["1", "600"]
entry: ["1600"]
combination ["1600"]
combination ["16", "00"]
entry: ["1600"]
combination ["1", "60", "0"]
entry: ["160", "0"]
entry: ["1600"]
entry: ["1", "600"]
combination ["160", "0"]
entry: ["1600"]
combination ["16", "0", "0"]
entry: ["160", "0"]
entry: ["1600"]
entry: ["16", "00"]
combination ["16", "00"]
entry: ["1600"]
combination ["1", "6", "8", "1"]
entry: ["16", "8", "1"]
entry: ["168", "1"]
entry: ["1681"]
entry: ["1", "68", "1"]
entry: ["1", "681"]
entry: ["1", "6", "81"]
combination ["1", "6", "81"]
entry: ["16", "81"]
entry: ["1681"]
entry: ["1", "681"]
combination ["1", "681"]
entry: ["1681"]
combination ["1681"]
combination ["16", "81"]
entry: ["1681"]
combination ["1", "68", "1"]
entry: ["168", "1"]
entry: ["1681"]
entry: ["1", "681"]
combination ["168", "1"]
entry: ["1681"]
combination ["16", "8", "1"]
entry: ["168", "1"]
entry: ["1681"]
entry: ["16", "81"]
combination ["1", "7", "6", "4"]
entry: ["17", "6", "4"]
entry: ["176", "4"]
entry: ["1764"]
entry: ["1", "76", "4"]
entry: ["1", "764"]
entry: ["1", "7", "64"]
combination ["1", "7", "64"]
entry: ["17", "64"]
entry: ["1764"]
entry: ["1", "764"]
combination ["1", "764"]
entry: ["1764"]
combination ["1764"]
combination ["17", "64"]
entry: ["1764"]
combination ["1", "76", "4"]
entry: ["176", "4"]
entry: ["1764"]
entry: ["1", "764"]
combination ["176", "4"]
entry: ["1764"]
combination ["17", "6", "4"]
entry: ["176", "4"]
entry: ["1764"]
entry: ["17", "64"]
combination ["17", "64"]
entry: ["1764"]
combination ["1", "8", "4", "9"]
entry: ["18", "4", "9"]
entry: ["184", "9"]
entry: ["1849"]
entry: ["1", "84", "9"]
entry: ["1", "849"]
entry: ["1", "8", "49"]
combination ["1", "8", "49"]
entry: ["18", "49"]
entry: ["1849"]
entry: ["1", "849"]
combination ["1", "849"]
entry: ["1849"]
combination ["1849"]
combination ["18", "49"]
entry: ["1849"]
combination ["1", "84", "9"]
entry: ["184", "9"]
entry: ["1849"]
entry: ["1", "849"]
combination ["184", "9"]
entry: ["1849"]
combination ["18", "4", "9"]
entry: ["184", "9"]
entry: ["1849"]
entry: ["18", "49"]
combination ["1", "9", "3", "6"]
entry: ["19", "3", "6"]
entry: ["193", "6"]
entry: ["1936"]
entry: ["1", "93", "6"]
entry: ["1", "936"]
entry: ["1", "9", "36"]
combination ["1", "9", "36"]
entry: ["19", "36"]
entry: ["1936"]
entry: ["1", "936"]
combination ["1", "936"]
entry: ["1936"]
combination ["1936"]
combination ["19", "36"]
entry: ["1936"]
combination ["1", "93", "6"]
entry: ["193", "6"]
entry: ["1936"]
entry: ["1", "936"]
combination ["193", "6"]
entry: ["1936"]
combination ["19", "3", "6"]
entry: ["193", "6"]
entry: ["1936"]
entry: ["19", "36"]
combination ["2", "0", "2", "5"]
entry: ["20", "2", "5"]
entry: ["202", "5"]
entry: ["2025"]
entry: ["2", "02", "5"]
entry: ["2", "025"]
entry: ["2", "0", "25"]
combination ["2", "0", "25"]
entry: ["20", "25"]
entry: ["2025"]
entry: ["2", "025"]
combination ["2", "025"]
entry: ["2025"]
combination ["2025"]
i: 45
i*i: 2025
combination ["2", "1", "1", "6"]
entry: ["21", "1", "6"]
entry: ["211", "6"]
entry: ["2116"]
entry: ["2", "11", "6"]
entry: ["2", "116"]
entry: ["2", "1", "16"]
combination ["2", "1", "16"]
entry: ["21", "16"]
entry: ["2116"]
entry: ["2", "116"]
combination ["2", "116"]
entry: ["2116"]
combination ["2116"]
combination ["21", "16"]
entry: ["2116"]
combination ["211", "6"]
entry: ["2116"]
combination ["21", "1", "6"]
entry: ["211", "6"]
entry: ["2116"]
entry: ["21", "16"]
combination ["2", "2", "0", "9"]
entry: ["22", "0", "9"]
entry: ["220", "9"]
entry: ["2209"]
entry: ["2", "20", "9"]
entry: ["2", "209"]
entry: ["2", "2", "09"]
combination ["2", "2", "09"]
entry: ["22", "09"]
entry: ["2209"]
entry: ["2", "209"]
combination ["2", "209"]
entry: ["2209"]
combination ["2209"]
combination ["22", "09"]
entry: ["2209"]
combination ["2", "20", "9"]
entry: ["220", "9"]
entry: ["2209"]
entry: ["2", "209"]
combination ["220", "9"]
entry: ["2209"]
combination ["2", "3", "0", "4"]
entry: ["23", "0", "4"]
entry: ["230", "4"]
entry: ["2304"]
entry: ["2", "30", "4"]
entry: ["2", "304"]
entry: ["2", "3", "04"]
combination ["2", "3", "04"]
entry: ["23", "04"]
entry: ["2304"]
entry: ["2", "304"]
combination ["2", "304"]
entry: ["2304"]
combination ["2304"]
combination ["23", "04"]
entry: ["2304"]
combination ["2", "30", "4"]
entry: ["230", "4"]
entry: ["2304"]
entry: ["2", "304"]
combination ["230", "4"]
entry: ["2304"]
combination ["23", "0", "4"]
entry: ["230", "4"]
entry: ["2304"]
entry: ["23", "04"]
combination ["23", "04"]
entry: ["2304"]
combination ["2", "4", "0", "1"]
entry: ["24", "0", "1"]
entry: ["240", "1"]
entry: ["2401"]
entry: ["2", "40", "1"]
entry: ["2", "401"]
entry: ["2", "4", "01"]
combination ["2", "4", "01"]
entry: ["24", "01"]
entry: ["2401"]
entry: ["2", "401"]
combination ["2", "401"]
entry: ["2401"]
combination ["2401"]
combination ["24", "01"]
entry: ["2401"]
combination ["2", "40", "1"]
entry: ["240", "1"]
entry: ["2401"]
entry: ["2", "401"]
combination ["240", "1"]
entry: ["2401"]
combination ["24", "0", "1"]
entry: ["240", "1"]
entry: ["2401"]
entry: ["24", "01"]
combination ["24", "01"]
entry: ["2401"]
combination ["2", "5", "0", "0"]
entry: ["25", "0", "0"]
entry: ["250", "0"]
entry: ["2500"]
entry: ["2", "50", "0"]
entry: ["2", "500"]
entry: ["2", "5", "00"]
combination ["2", "5", "00"]
entry: ["25", "00"]
entry: ["2500"]
entry: ["2", "500"]
combination ["2", "500"]
entry: ["2500"]
combination ["2500"]
combination ["25", "00"]
entry: ["2500"]
combination ["2", "50", "0"]
entry: ["250", "0"]
entry: ["2500"]
entry: ["2", "500"]
combination ["250", "0"]
entry: ["2500"]
combination ["25", "0", "0"]
entry: ["250", "0"]
entry: ["2500"]
entry: ["25", "00"]
combination ["25", "00"]
entry: ["2500"]
combination ["2", "6", "0", "1"]
entry: ["26", "0", "1"]
entry: ["260", "1"]
entry: ["2601"]
entry: ["2", "60", "1"]
entry: ["2", "601"]
entry: ["2", "6", "01"]
combination ["2", "6", "01"]
entry: ["26", "01"]
entry: ["2601"]
entry: ["2", "601"]
combination ["2", "601"]
entry: ["2601"]
combination ["2601"]
combination ["26", "01"]
entry: ["2601"]
combination ["2", "60", "1"]
entry: ["260", "1"]
entry: ["2601"]
entry: ["2", "601"]
combination ["260", "1"]
entry: ["2601"]
combination ["26", "0", "1"]
entry: ["260", "1"]
entry: ["2601"]
entry: ["26", "01"]
combination ["26", "01"]
entry: ["2601"]
combination ["2", "7", "0", "4"]
entry: ["27", "0", "4"]
entry: ["270", "4"]
entry: ["2704"]
entry: ["2", "70", "4"]
entry: ["2", "704"]
entry: ["2", "7", "04"]
combination ["2", "7", "04"]
entry: ["27", "04"]
entry: ["2704"]
entry: ["2", "704"]
combination ["2", "704"]
entry: ["2704"]
combination ["2704"]
combination ["27", "04"]
entry: ["2704"]
combination ["2", "70", "4"]
entry: ["270", "4"]
entry: ["2704"]
entry: ["2", "704"]
combination ["270", "4"]
entry: ["2704"]
combination ["27", "0", "4"]
entry: ["270", "4"]
entry: ["2704"]
entry: ["27", "04"]
combination ["27", "04"]
entry: ["2704"]
combination ["2", "8", "0", "9"]
entry: ["28", "0", "9"]
entry: ["280", "9"]
entry: ["2809"]
entry: ["2", "80", "9"]
entry: ["2", "809"]
entry: ["2", "8", "09"]
combination ["2", "8", "09"]
entry: ["28", "09"]
entry: ["2809"]
entry: ["2", "809"]
combination ["2", "809"]
entry: ["2809"]
combination ["2809"]
combination ["28", "09"]
entry: ["2809"]
combination ["2", "80", "9"]
entry: ["280", "9"]
entry: ["2809"]
entry: ["2", "809"]
combination ["280", "9"]
entry: ["2809"]
combination ["28", "0", "9"]
entry: ["280", "9"]
entry: ["2809"]
entry: ["28", "09"]
combination ["28", "09"]
entry: ["2809"]
combination ["2", "9", "1", "6"]
entry: ["29", "1", "6"]
entry: ["291", "6"]
entry: ["2916"]
entry: ["2", "91", "6"]
entry: ["2", "916"]
entry: ["2", "9", "16"]
combination ["2", "9", "16"]
entry: ["29", "16"]
entry: ["2916"]
entry: ["2", "916"]
combination ["2", "916"]
entry: ["2916"]
combination ["2916"]
combination ["29", "16"]
entry: ["2916"]
combination ["2", "91", "6"]
entry: ["291", "6"]
entry: ["2916"]
entry: ["2", "916"]
combination ["291", "6"]
entry: ["2916"]
combination ["29", "1", "6"]
entry: ["291", "6"]
entry: ["2916"]
entry: ["29", "16"]
combination ["3", "0", "2", "5"]
entry: ["30", "2", "5"]
entry: ["302", "5"]
entry: ["3025"]
entry: ["3", "02", "5"]
entry: ["3", "025"]
entry: ["3", "0", "25"]
combination ["3", "0", "25"]
entry: ["30", "25"]
entry: ["3025"]
entry: ["3", "025"]
combination ["3", "025"]
entry: ["3025"]
combination ["3025"]
i: 55
i*i: 3025
combination ["3", "1", "3", "6"]
entry: ["31", "3", "6"]
entry: ["313", "6"]
entry: ["3136"]
entry: ["3", "13", "6"]
entry: ["3", "136"]
entry: ["3", "1", "36"]
combination ["3", "1", "36"]
entry: ["31", "36"]
entry: ["3136"]
entry: ["3", "136"]
combination ["3", "136"]
entry: ["3136"]
combination ["3136"]
combination ["31", "36"]
entry: ["3136"]
combination ["3", "13", "6"]
entry: ["313", "6"]
entry: ["3136"]
entry: ["3", "136"]
combination ["313", "6"]
entry: ["3136"]
combination ["3", "2", "4", "9"]
entry: ["32", "4", "9"]
entry: ["324", "9"]
entry: ["3249"]
entry: ["3", "24", "9"]
entry: ["3", "249"]
entry: ["3", "2", "49"]
combination ["3", "2", "49"]
entry: ["32", "49"]
entry: ["3249"]
entry: ["3", "249"]
combination ["3", "249"]
entry: ["3249"]
combination ["3249"]
combination ["32", "49"]
entry: ["3249"]
combination ["3", "24", "9"]
entry: ["324", "9"]
entry: ["3249"]
entry: ["3", "249"]
combination ["324", "9"]
entry: ["3249"]
combination ["32", "4", "9"]
entry: ["324", "9"]
entry: ["3249"]
entry: ["32", "49"]
combination ["3", "3", "6", "4"]
entry: ["33", "6", "4"]
entry: ["336", "4"]
entry: ["3364"]
entry: ["3", "36", "4"]
entry: ["3", "364"]
entry: ["3", "3", "64"]
combination ["3", "3", "64"]
entry: ["33", "64"]
entry: ["3364"]
entry: ["3", "364"]
combination ["3", "364"]
entry: ["3364"]
combination ["3364"]
combination ["33", "64"]
entry: ["3364"]
combination ["3", "36", "4"]
entry: ["336", "4"]
entry: ["3364"]
entry: ["3", "364"]
combination ["336", "4"]
entry: ["3364"]
combination ["3", "4", "8", "1"]
entry: ["34", "8", "1"]
entry: ["348", "1"]
entry: ["3481"]
entry: ["3", "48", "1"]
entry: ["3", "481"]
entry: ["3", "4", "81"]
combination ["3", "4", "81"]
entry: ["34", "81"]
entry: ["3481"]
entry: ["3", "481"]
combination ["3", "481"]
entry: ["3481"]
combination ["3481"]
combination ["34", "81"]
entry: ["3481"]
combination ["3", "48", "1"]
entry: ["348", "1"]
entry: ["3481"]
entry: ["3", "481"]
combination ["348", "1"]
entry: ["3481"]
combination ["34", "8", "1"]
entry: ["348", "1"]
entry: ["3481"]
entry: ["34", "81"]
combination ["3", "6", "0", "0"]
entry: ["36", "0", "0"]
entry: ["360", "0"]
entry: ["3600"]
entry: ["3", "60", "0"]
entry: ["3", "600"]
entry: ["3", "6", "00"]
combination ["3", "6", "00"]
entry: ["36", "00"]
entry: ["3600"]
entry: ["3", "600"]
combination ["3", "600"]
entry: ["3600"]
combination ["3600"]
combination ["36", "00"]
entry: ["3600"]
combination ["3", "60", "0"]
entry: ["360", "0"]
entry: ["3600"]
entry: ["3", "600"]
combination ["360", "0"]
entry: ["3600"]
combination ["36", "0", "0"]
entry: ["360", "0"]
entry: ["3600"]
entry: ["36", "00"]
combination ["36", "00"]
entry: ["3600"]
combination ["3", "7", "2", "1"]
entry: ["37", "2", "1"]
entry: ["372", "1"]
entry: ["3721"]
entry: ["3", "72", "1"]
entry: ["3", "721"]
entry: ["3", "7", "21"]
combination ["3", "7", "21"]
entry: ["37", "21"]
entry: ["3721"]
entry: ["3", "721"]
combination ["3", "721"]
entry: ["3721"]
combination ["3721"]
combination ["37", "21"]
entry: ["3721"]
combination ["3", "72", "1"]
entry: ["372", "1"]
entry: ["3721"]
entry: ["3", "721"]
combination ["372", "1"]
entry: ["3721"]
combination ["37", "2", "1"]
entry: ["372", "1"]
entry: ["3721"]
entry: ["37", "21"]
combination ["3", "8", "4", "4"]
entry: ["38", "4", "4"]
entry: ["384", "4"]
entry: ["3844"]
entry: ["3", "84", "4"]
entry: ["3", "844"]
entry: ["3", "8", "44"]
combination ["3", "8", "44"]
entry: ["38", "44"]
entry: ["3844"]
entry: ["3", "844"]
combination ["3", "844"]
entry: ["3844"]
combination ["3844"]
combination ["38", "44"]
entry: ["3844"]
combination ["3", "84", "4"]
entry: ["384", "4"]
entry: ["3844"]
entry: ["3", "844"]
combination ["384", "4"]
entry: ["3844"]
combination ["38", "4", "4"]
entry: ["384", "4"]
entry: ["3844"]
entry: ["38", "44"]
combination ["3", "9", "6", "9"]
entry: ["39", "6", "9"]
entry: ["396", "9"]
entry: ["3969"]
entry: ["3", "96", "9"]
entry: ["3", "969"]
entry: ["3", "9", "69"]
combination ["3", "9", "69"]
entry: ["39", "69"]
entry: ["3969"]
entry: ["3", "969"]
combination ["3", "969"]
entry: ["3969"]
combination ["3969"]
combination ["39", "69"]
entry: ["3969"]
combination ["3", "96", "9"]
entry: ["396", "9"]
entry: ["3969"]
entry: ["3", "969"]
combination ["396", "9"]
entry: ["3969"]
combination ["39", "6", "9"]
entry: ["396", "9"]
entry: ["3969"]
entry: ["39", "69"]
combination ["39", "69"]
entry: ["3969"]
combination ["4", "0", "9", "6"]
entry: ["40", "9", "6"]
entry: ["409", "6"]
entry: ["4096"]
entry: ["4", "09", "6"]
entry: ["4", "096"]
entry: ["4", "0", "96"]
combination ["4", "0", "96"]
entry: ["40", "96"]
entry: ["4096"]
entry: ["4", "096"]
combination ["4", "096"]
entry: ["4096"]
combination ["4096"]
combination ["40", "96"]
entry: ["4096"]
combination ["4", "09", "6"]
entry: ["409", "6"]
entry: ["4096"]
entry: ["4", "096"]
combination ["409", "6"]
entry: ["4096"]
combination ["40", "9", "6"]
entry: ["409", "6"]
entry: ["4096"]
entry: ["40", "96"]
combination ["4", "2", "2", "5"]
entry: ["42", "2", "5"]
entry: ["422", "5"]
entry: ["4225"]
entry: ["4", "22", "5"]
entry: ["4", "225"]
entry: ["4", "2", "25"]
combination ["4", "2", "25"]
entry: ["42", "25"]
entry: ["4225"]
entry: ["4", "225"]
combination ["4", "225"]
entry: ["4225"]
combination ["4225"]
combination ["42", "25"]
entry: ["4225"]
combination ["422", "5"]
entry: ["4225"]
combination ["42", "2", "5"]
entry: ["422", "5"]
entry: ["4225"]
entry: ["42", "25"]
combination ["4", "3", "5", "6"]
entry: ["43", "5", "6"]
entry: ["435", "6"]
entry: ["4356"]
entry: ["4", "35", "6"]
entry: ["4", "356"]
entry: ["4", "3", "56"]
combination ["4", "3", "56"]
entry: ["43", "56"]
entry: ["4356"]
entry: ["4", "356"]
combination ["4", "356"]
entry: ["4356"]
combination ["4356"]
combination ["43", "56"]
entry: ["4356"]
combination ["4", "35", "6"]
entry: ["435", "6"]
entry: ["4356"]
entry: ["4", "356"]
combination ["435", "6"]
entry: ["4356"]
combination ["43", "5", "6"]
entry: ["435", "6"]
entry: ["4356"]
entry: ["43", "56"]
combination ["4", "4", "8", "9"]
entry: ["44", "8", "9"]
entry: ["448", "9"]
entry: ["4489"]
entry: ["4", "48", "9"]
entry: ["4", "489"]
entry: ["4", "4", "89"]
combination ["4", "4", "89"]
entry: ["44", "89"]
entry: ["4489"]
entry: ["4", "489"]
combination ["4", "489"]
entry: ["4489"]
combination ["4489"]
combination ["44", "89"]
entry: ["4489"]
combination ["4", "48", "9"]
entry: ["448", "9"]
entry: ["4489"]
entry: ["4", "489"]
combination ["448", "9"]
entry: ["4489"]
combination ["4", "6", "2", "4"]
entry: ["46", "2", "4"]
entry: ["462", "4"]
entry: ["4624"]
entry: ["4", "62", "4"]
entry: ["4", "624"]
entry: ["4", "6", "24"]
combination ["4", "6", "24"]
entry: ["46", "24"]
entry: ["4624"]
entry: ["4", "624"]
combination ["4", "624"]
entry: ["4624"]
combination ["4624"]
combination ["46", "24"]
entry: ["4624"]
combination ["4", "62", "4"]
entry: ["462", "4"]
entry: ["4624"]
entry: ["4", "624"]
combination ["462", "4"]
entry: ["4624"]
combination ["46", "2", "4"]
entry: ["462", "4"]
entry: ["4624"]
entry: ["46", "24"]
combination ["46", "24"]
entry: ["4624"]
combination ["4", "7", "6", "1"]
entry: ["47", "6", "1"]
entry: ["476", "1"]
entry: ["4761"]
entry: ["4", "76", "1"]
entry: ["4", "761"]
entry: ["4", "7", "61"]
combination ["4", "7", "61"]
entry: ["47", "61"]
entry: ["4761"]
entry: ["4", "761"]
combination ["4", "761"]
entry: ["4761"]
combination ["4761"]
combination ["47", "61"]
entry: ["4761"]
combination ["4", "76", "1"]
entry: ["476", "1"]
entry: ["4761"]
entry: ["4", "761"]
combination ["476", "1"]
entry: ["4761"]
combination ["47", "6", "1"]
entry: ["476", "1"]
entry: ["4761"]
entry: ["47", "61"]
combination ["4", "9", "0", "0"]
entry: ["49", "0", "0"]
entry: ["490", "0"]
entry: ["4900"]
entry: ["4", "90", "0"]
entry: ["4", "900"]
entry: ["4", "9", "00"]
combination ["4", "9", "00"]
entry: ["49", "00"]
entry: ["4900"]
entry: ["4", "900"]
combination ["4", "900"]
entry: ["4900"]
combination ["4900"]
combination ["49", "00"]
entry: ["4900"]
combination ["4", "90", "0"]
entry: ["490", "0"]
entry: ["4900"]
entry: ["4", "900"]
combination ["490", "0"]
entry: ["4900"]
combination ["49", "0", "0"]
entry: ["490", "0"]
entry: ["4900"]
entry: ["49", "00"]
combination ["49", "00"]
entry: ["4900"]
combination ["5", "0", "4", "1"]
entry: ["50", "4", "1"]
entry: ["504", "1"]
entry: ["5041"]
entry: ["5", "04", "1"]
entry: ["5", "041"]
entry: ["5", "0", "41"]
combination ["5", "0", "41"]
entry: ["50", "41"]
entry: ["5041"]
entry: ["5", "041"]
combination ["5", "041"]
entry: ["5041"]
combination ["5041"]
combination ["50", "41"]
entry: ["5041"]
combination ["5", "04", "1"]
entry: ["504", "1"]
entry: ["5041"]
entry: ["5", "041"]
combination ["504", "1"]
entry: ["5041"]
combination ["50", "4", "1"]
entry: ["504", "1"]
entry: ["5041"]
entry: ["50", "41"]
combination ["5", "1", "8", "4"]
entry: ["51", "8", "4"]
entry: ["518", "4"]
entry: ["5184"]
entry: ["5", "18", "4"]
entry: ["5", "184"]
entry: ["5", "1", "84"]
combination ["5", "1", "84"]
entry: ["51", "84"]
entry: ["5184"]
entry: ["5", "184"]
combination ["5", "184"]
entry: ["5184"]
combination ["5184"]
combination ["51", "84"]
entry: ["5184"]
combination ["5", "18", "4"]
entry: ["518", "4"]
entry: ["5184"]
entry: ["5", "184"]
combination ["518", "4"]
entry: ["5184"]
combination ["51", "8", "4"]
entry: ["518", "4"]
entry: ["5184"]
entry: ["51", "84"]
ok
test medium::first_comp_painted_col_or_row_2661::tests::test1 ... ok
test medium::first_comp_painted_col_or_row_2661::tests::test2 ... ok
test medium::first_comp_painted_col_or_row_2661::tests::test3 ... ok
test medium::grid_game_2017::tests::test1 ... ok
test medium::grid_game_2017::tests::test2 ... ok
test medium::grid_game_2017::tests::test3 ... ok
test medium::kth_lexo_str_of_all_happy_str_1415::tests::test1 ... active_string: []
active_string_len: 0
active_string: ['a']
active_string_len: 1
active_string: ['a', 'a']
active_string_len: 2
active_string: ['a', 'a', 'a']
active_string_len: 3
Inside exit
active_string: ['a', 'a', 'b']
active_string_len: 3
Inside exit
active_string: ['a', 'a', 'c']
active_string_len: 3
Inside exit
active_string: ['a', 'b']
active_string_len: 2
active_string: ['a', 'b', 'a']
active_string_len: 3
Inside exit
active_string: ['a', 'b', 'b']
active_string_len: 3
Inside exit
active_string: ['a', 'b', 'c']
active_string_len: 3
Inside exit
active_string: ['a', 'c']
active_string_len: 2
active_string: ['a', 'c', 'a']
active_string_len: 3
Inside exit
active_string: ['a', 'c', 'b']
active_string_len: 3
Inside exit
active_string: ['a', 'c', 'c']
active_string_len: 3
Inside exit
active_string: ['b']
active_string_len: 1
active_string: ['b', 'a']
active_string_len: 2
active_string: ['b', 'a', 'a']
active_string_len: 3
Inside exit
active_string: ['b', 'a', 'b']
active_string_len: 3
Inside exit
active_string: ['b', 'a', 'c']
active_string_len: 3
Inside exit
active_string: ['b', 'b']
active_string_len: 2
active_string: ['b', 'b', 'a']
active_string_len: 3
Inside exit
active_string: ['b', 'b', 'b']
active_string_len: 3
Inside exit
active_string: ['b', 'b', 'c']
active_string_len: 3
Inside exit
active_string: ['b', 'c']
active_string_len: 2
active_string: ['b', 'c', 'a']
active_string_len: 3
Inside exit
active_string: ['b', 'c', 'b']
active_string_len: 3
Inside exit
active_string: ['b', 'c', 'c']
active_string_len: 3
Inside exit
active_string: ['c']
active_string_len: 1
active_string: ['c', 'a']
active_string_len: 2
active_string: ['c', 'a', 'a']
active_string_len: 3
Inside exit
active_string: ['c', 'a', 'b']
active_string_len: 3
Inside exit
active_string: ['c', 'a', 'c']
active_string_len: 3
Inside exit
active_string: ['c', 'b']
active_string_len: 2
active_string: ['c', 'b', 'a']
active_string_len: 3
Inside exit
active_string: ['c', 'b', 'b']
active_string_len: 3
Inside exit
active_string: ['c', 'b', 'c']
active_string_len: 3
Inside exit
active_string: ['c', 'c']
active_string_len: 2
active_string: ['c', 'c', 'a']
active_string_len: 3
Inside exit
active_string: ['c', 'c', 'b']
active_string_len: 3
Inside exit
active_string: ['c', 'c', 'c']
active_string_len: 3
Inside exit
["aaa", "aab", "aac", "aba", "abb", "abc", "aca", "acb", "acc", "baa", "bab", "bac", "bba", "bbb", "bbc", "bca", "bcb", "bcc", "caa", "cab", "cac", "cba", "cbb", "cbc", "cca", "ccb", "ccc"]
FAILED
test medium::letter_tile_pos_1079::tests::test1 ... ok
test medium::map_of_highest_peak_1765::tests::test1 ... ok
test medium::max_num_fish_in_grid_2658::tests::test1 ... ok
test medium::min_len_of_str_after_ops_3223::tests::test1 ... ok
test medium::min_ops_to_exceed_threshold_value_ii_3066::tests::test1 ... ok
test medium::min_ops_to_exceed_threshold_value_ii_3066::tests::test2 ... ok
test medium::min_xor_2429::tests::test1 ... ok
test medium::min_xor_2429::tests::test2 ... ok
test medium::min_xor_2429::tests::test3 ... ok
test medium::remove_all_occ_of_substr_1910::tests::test1 ... ok
test medium::sort_an_array_912::tests::algo_book ... ok
test medium::sort_an_array_912::tests::test_sort_array ... ok
test medium::tuple_with_same_product_1726::tests::test1 ... ok
test medium::tuple_with_same_product_1726::tests::test2 ... ok
test medium::tuple_with_same_product_1726::tests::test3 ... ok

failures:

failures:
    medium::kth_lexo_str_of_all_happy_str_1415::tests::test1

test result: FAILED. 284 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s

